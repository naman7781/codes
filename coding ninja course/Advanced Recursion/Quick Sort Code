Sort an array A using Quick Sort.
Change in the input array itself. So no need to return or print anything.
Input format :
Line 1 : Integer n i.e. Array size
Line 2 : Array elements (separated by space)
Output format :
Array elements in increasing order (separated by space)
Constraints :
1 <= n <= 1000
Sample Input:
6 
2 6 8 5 4 3
Sample Output:
2 3 4 5 6 8

code-------------------------

int partition(int input[],int si,int ei){
    int count_smaller_elements=0;
    for(int i=si+1;i<=ei;i++){
        if(input[si]>=input[i])
            count_smaller_elements++;
    }
    int t=input[si];
    input[si]=input[si+count_smaller_elements];
    input[si+count_smaller_elements]=t;
    int i=si;
    int j=ei;
    while(i<si+count_smaller_elements&&j>si+count_smaller_elements){
       if(input[i]<=t)
           i++;
        else if(input[j]>t)
            j--;
        else{
            int temp=input[i];
            input[i]=input[j];
            input[j]=temp;
            i++;
            j--;
        }
    }
    return count_smaller_elements+si;
}
void quickSort(int input[],int si,int ei){
    if(si>=ei)
        return;
    int c=partition(input,si,ei);
    quickSort(input,si,c-1);
    quickSort(input,c+1,ei);
}
void quickSort(int input[], int size) {
    quickSort(input,0,size-1);
}
